knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
is.na(airlines) %>% colSums()
is.na(airports) %>% colSums()
airports %>% filter(is.na(tzone))
airports[is.na(airports$tzone), "tzone"] <- c("America/New_York","America/New_York","America/Anchorage")
is.na(flights) %>% colSums()
flights %>% filter(is.na(dep_time) | is.na(dep_delay) | is.na(arr_time) | is.na(arr_delay) | is.na(tailnum) | is.na(air_time))
quantile(x = flights$dep_delay, na.rm = T)
quantile(x = flights$arr_delay, na.rm = T)
sprintf(fmt = "%02d:%02d", 8,30)
is.na(planes) %>% colSums()
is.na(weather) %>% colSums()
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
data(nycflights)
data(nycflights)
shiny::runApp('~/.rstudio-desktop/projects/4. IP/jupiter_dashboard2')
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
unique(planes$manufacturer)
knitr::opts_chunk$set(echo = TRUE)
head(airlines)
library(tidyverse)
library(lubridate)
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
as.character(sapply(sched_dep_time, convertToHMchar))
convertToHMchar <- function(input) {
if (nchar(input == 4)) {
output <- paste0(str_extract(input, pattern = "^.."),
":",
str_extract(input, pattern = "..$"))
} else if (nchar(input) == 3) {
output <- paste0(str_extract(input, pattern = "^."),
":",
str_extract(input, pattern = "..$"))
}
}
convertToHMchar <- function(input) {
if (nchar(input == 4)) {
output <- paste0(str_extract(input, pattern = "^.."),
":",
str_extract(input, pattern = "..$"))
} else if (nchar(input) == 3) {
output <- paste0(str_extract(input, pattern = "^."),
":",
str_extract(input, pattern = "..$"))
}
}
as.character(sapply(sched_dep_time, convertToHMchar))
as.character(sapply(flights$sched_dep_time, convertToHMchar))
substr("abcdef", 2, 4)
substring("abcdef", 1:6, 1:6)
gsub("^.", "1530")
gsub("^.", replacement = "", x = "1530" )
gsub("..$", replacement = "", x = "1530" )
convertToHMchar <- function(input) {
if (nchar(input == 4)) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
}
as.character(sapply(flights$sched_dep_time, convertToHMchar))
convertToHMchar <- function(input) {
if (nchar(input == 4)) {
output <- paste0(str_extract(input, pattern = "^.."),
":",
str_extract(input, pattern = "..$"))
} else if (nchar(input) == 3) {
output <- paste0(str_extract(input, pattern = "^."),
":",
str_extract(input, pattern = "..$"))
}
}
as.character(sapply(flights$sched_dep_time, convertToHMchar))
convertToHMchar(flights$sched_dep_time[1])
convertToHMchar <- function(input) {
if (nchar(input == 4)) {
output <- paste0(str_extract(input, pattern = "^.."),
":",
str_extract(input, pattern = "..$"))
} else if (nchar(input) == 3) {
output <- paste0(str_extract(input, pattern = "^."),
":",
str_extract(input, pattern = "..$"))
}
return(output)
}
convertToHMchar(flights$sched_dep_time[1])
flights$sched_dep_time[1]
as.character(flights$sched_dep_time[1])
nycflights13::flights$sched_dep_time[1]
class(nycflights13::flights$sched_dep_time[1])
as.numeric(flights$sched_dep_time[1])
flights
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
flights <- nycflights13::flights
head(flights)
class(flights)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
flights <- nycflights13::flights
head(flights)
flights
airports %>% filter(is.na(tzone))
flights %>% filter(is.na(dep_time) | is.na(dep_delay) | is.na(arr_time) | is.na(arr_delay) | is.na(tailnum) | is.na(air_time))
flights
is.na(flights) %>% colSums()
mdn_dep_delay <- median(flights$dep_delay, na.rm = T)
mdn_arr_delay <- median(flights$arr_delay, na.rm = T)
flights$dep_delay <- replace_na(data = flights$dep_delay, replace = mdn_dep_delay)
flights$arr_delay <- replace_na(data = flights$arr_delay, replace = mdn_arr_delay)
is.na(flights) %>% colSums()
convertToHMchar <- function(input) {
input <- as.character(input)
if (nchar(input == 4)) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
return(output)
}
convertToHMchar(flights$sched_dep_time[1])
gsub("..$", replacement = "", x = flights$sched_dep_time[1])
gsub("^.", replacement = "", x = flights$sched_dep_time[1])
paste0(gsub("..$", replacement = "", x = flights$sched_dep_time[1]),
":",
gsub("^.", replacement = "", x = flights$sched_dep_time[1]))
convertToHMchar <- function(input) {
# input <- as.character(input)
if (nchar(input == 4)) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
return(output)
}
convertToHMchar(flights$sched_dep_time[1])
convertToHMchar <- function(input) {
# input <- as.character(input)
browser()
if (nchar(input == 4)) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
browser()
return(output)
}
convertToHMchar(flights$sched_dep_time[1])
force(input)
convertToHMchar <- function(input) {
input <- as.character(input)
browser()
if (nchar(input == 4)) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
browser()
return(output)
}
convertToHMchar(flights$sched_dep_time[1])
convertToHMchar <- function(input) {
input <- as.character(input)
browser()
if (nchar(input) == 4) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
browser()
return(output)
}
convertToHMchar(flights$sched_dep_time[1])
convertToHMchar <- function(input) {
input <- as.character(input)
if (nchar(input) == 4) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
return(output)
}
convertToHMchar(flights$sched_dep_time[1])
as.character(sapply(flights$sched_dep_time, convertToHMchar))
Sys.time()
convertToHMchar <- function(input) {
input <- as.character(input)
if (nchar(input) == 4) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
return(output)
}
Time <- Sys.time()
as.character(sapply(flights$sched_dep_time, convertToHMchar))
Sys.time() - fi
firstTime <- Sys.time()
as.character(sapply(flights$sched_dep_time, convertToHMchar))
Sys.time() - firstTime
convertToHMchar <- function(input) {
input <- as.character(input)
if (nchar(input) == 4) {
output <- paste0(str_extract(input, pattern = "^.."),
":",
str_extract(input, pattern = "..$"))
} else if (nchar(input) == 3) {
output <- paste0(str_extract(input, pattern = "^."),
":",
str_extract(input, pattern = "..$"))
}
return(output)
}
firstTime <- Sys.time()
as.character(sapply(flights$sched_dep_time, convertToHMchar))
Sys.time() - firstTime
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
airports %>% filter(is.na(tzone))
airports[is.na(airports$tzone), "tzone"] <- c("America/New_York","America/New_York","America/Anchorage")
is.na(flights) %>% colSums()
mdn_dep_delay <- median(flights$dep_delay, na.rm = T)
mdn_arr_delay <- median(flights$arr_delay, na.rm = T)
flights$dep_delay <- replace_na(data = flights$dep_delay, replace = mdn_dep_delay)
flights$arr_delay <- replace_na(data = flights$arr_delay, replace = mdn_arr_delay)
flights
flights
convertToHMchar <- function(input) {
input <- as.character(input)
if (nchar(input) == 4) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
return(output)
}
#### you could also use codes below powered by 'stringr' package ##########################
#### they are more understandable but executed slower than functions of 'base' package ####
# convertToHMchar <- function(input) {
#    input <- as.character(input)
#    if (nchar(input) == 4) {
#       output <- paste0(str_extract(input, pattern = "^.."),
#                        ":",
#                        str_extract(input, pattern = "..$"))
#    } else if (nchar(input) == 3) {
#       output <- paste0(str_extract(input, pattern = "^."),
#                        ":",
#                        str_extract(input, pattern = "..$"))
#    }
#    return(output)
# }
flights$sched_dep_time <- as.character(sapply(flights$sched_dep_time, convertToHMchar))
flights$sched_arr_time <- as.character(sapply(flights$sched_arr_time, convertToHMchar))
flights
convertToHMchar(flights$sched_arr_time[1])
convertToHMchar(flights$sched_arr_time[4])
flights$sched_arr_time <- as.character(sapply(flights$sched_arr_time, convertToHMchar))
convertToHMchar <- function(input) {
input <- as.character(input)
browser()
if (nchar(input) == 4) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
browser()
return(output)
}
flights$sched_arr_time <- as.character(sapply(flights$sched_arr_time, convertToHMchar))
flights$sched_arr_time
airports[airports$faa == "BQN",]
airports[airports$faa == "BQN"]
airports[airports$faa == "BQN",]
airports[airports$faa == "EWR",]
airports[airports$faa == "BQN",]
flights[flights$dest == "BQN",]
airports[airports$faa == "LAX",]
length(unique(flights$dest))
length(unique(airports$faa))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
airports[is.na(airports$tzone), "tzone"] <- c("America/New_York","America/New_York","America/Anchorage")
mdn_dep_delay <- median(flights$dep_delay, na.rm = T)
mdn_arr_delay <- median(flights$arr_delay, na.rm = T)
flights$dep_delay <- replace_na(data = flights$dep_delay, replace = mdn_dep_delay)
flights$arr_delay <- replace_na(data = flights$arr_delay, replace = mdn_arr_delay)
convertToHMchar <- function(input) {
input <- as.character(input)
browser()
if (nchar(input) == 4) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
browser()
return(output)
}
flights$sched_dep_time <- as.character(sapply(flights$sched_dep_time, convertToHMchar))
flights
flights[flights$dest == "BQN",]
flights[flights$dest == "BQN",]
airports[airports$faa == "BQN",]
airports[1,]
airports[nrow(airports)+1,] <- c("BQN", # FAA code
"Rafael Hernández Airport", # Airport name
18.49486, # Latitude
-67.12944, # Longitude
237, # Altitude
-4, # Time zone offset from UTC
N, # Does daylight saving time exist?
"America/Puerto_Rico") # Time zone
airports[nrow(airports)+1,] <- c("BQN", # FAA code
"Rafael Hernández Airport", # Airport name
18.49486, # Latitude
-67.12944, # Longitude
237, # Altitude
-4, # Time zone offset from UTC
"N", # Does daylight saving time exist?
"America/Puerto_Rico") # Time zone
airports[airports$faa == "BQN",]
airports
airports <- as.data.frame(nycflights13::airports)
head(airports)
unique(airlines$carrier)
length(unique(airlines$carrier))
airports %>% filter(is.na(tzone))
airports[is.na(airports$tzone), "tzone"] <- c("America/New_York","America/New_York","America/Anchorage")
mdn_dep_delay <- median(flights$dep_delay, na.rm = T)
mdn_arr_delay <- median(flights$arr_delay, na.rm = T)
flights$dep_delay <- replace_na(data = flights$dep_delay, replace = mdn_dep_delay)
flights$arr_delay <- replace_na(data = flights$arr_delay, replace = mdn_arr_delay)
airports[nrow(airports)+1,] <- c("BQN", # FAA code
"Rafael Hernández Airport", # Airport name
as.numeric(18.49486), # Latitude
as.numeric(-67.12944), # Longitude
as.numeric(237), # Altitude
as.numeric(-4), # Time zone offset from UTC
"N", # Does daylight saving time exist?
"America/Puerto_Rico") # Time zone
airports
