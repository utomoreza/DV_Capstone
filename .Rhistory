plot.title = element_text(face = "bold", size = 14))
p4
p4 <- ggplot(dfpopPercent, aes(x = Year,
y = Total_pop,
text = glue("{Region} <br> Year: {Year} <br> Pops: {Total_pop}"),
group = Region)) +
geom_area(aes(fill = Region),
position = "fill",
color = "white",
size = 0.2) +
labs(title = "World Population",
x = "Year",
y = NULL) +
scale_x_continuous(labels = comma) +
scale_fill_brewer(palette = "Dark2") +
theme_calc() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 14))
p4
ggplotly(p4, tooltip = "text")
p4 <- ggplot(dfpopPercent, aes(x = Year,
y = Total_pop,
text = paste0(Region, "<br>",
"Year: ", Year, "<br>",
"Pops: ", format(Total_pop, big.mark = ",")),
group = Region)) +
geom_area(aes(fill = Region),
position = "fill",
color = "white",
size = 0.2) +
labs(title = "World Population - Normalized",
x = "Year",
y = NULL) +
scale_x_continuous(labels = comma) +
scale_fill_brewer(palette = "Dark2") +
theme_calc() +
theme(plot.title = element_text(face = "bold", size = 15))
p4 <- ggplot(dfpopPercent, aes(x = Year,
y = Total_pop,
text = paste0(Region, "<br>",
"Year: ", Year, "<br>",
"Pops: ", format(Total_pop, big.mark = ",")),
group = Region)) +
geom_area(aes(fill = Region),
position = "fill",
color = "white",
size = 0.2) +
labs(title = "World Population - Normalized",
x = "Year",
y = NULL) +
scale_x_continuous(labels = comma) +
scale_fill_brewer(palette = "Dark2") +
scale_y_continuous(labels = percent) +
theme_calc() +
theme(plot.title = element_text(face = "bold", size = 15))
p4
ggplotly(p4, tooltip = "text")
LEvsGDP <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-vs-gdp-per-capita.csv"))
LEvsGDP
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(plotly)
library(scales)
lifeExp <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy.csv"))
lifeExp
lifeExp_countries <- lifeExp %>%
filter(!is.na(Code) & Entity != "World") %>%
rename(Country = Entity, LE_age = `Life expectancy (years)`) %>%
mutate(Country = as.factor(Country), Code = as.factor(Code))
lifeExp_regions <- lifeExp %>%
filter(is.na(Code) | Entity == "World") %>%
select(Entity, Year, `Life expectancy (years)`) %>%
rename(Region = Entity, LE_age = `Life expectancy (years)`) %>%
mutate(Region = as.factor(Region))
lifeExp_countries
lifeExp_regions
# Select only 5 countries in maximum
country1 <- "Indonesia"
country2 <- "Malaysia"
country3 <- "Singapore"
country4 <- "Myanmar"
country5 <- "Thailand"
# subset by countries chosen
lifeExp_countries_chosen <- lifeExp_countries %>%
filter(Country == country1 |
Country == country2 |
Country == country3 |
Country == country4 |
Country == country5)
country <- paste0(lifeExp_countries_chosen$Country, "<br>",
"Year: ", lifeExp_countries_chosen$Year, "<br>",
"Life expectancy: ", round(lifeExp_countries_chosen$LE_age),1)
p1a <- ggplot(lifeExp_countries_chosen, aes(x = Year,
y = LE_age,
text = paste0(Country, "<br>",
"Year: ", Year, "<br>",
"Life expectancy: ", round(LE_age, 1)),
group = 1)) +
geom_line(aes(color = Country)) +
labs(title = "Life expectancy",
caption = "Source: ourworldindata.org") +
scale_y_continuous(breaks = seq(from = 0, to = 90, by = 10),
labels = c('0 year',
'10 years',
'20 years',
'30 years',
'40 years',
'50 years',
'60 years',
'70 years',
'80 years',
'90 years')) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(face = "bold", size = 18),
plot.caption = element_text(size = 7),
legend.title = element_blank())
plotly1a <- ggplotly(p1a, tooltip = "text")
plotly1a
p1b <- ggplot(lifeExp_regions, aes(x = Year,
y = LE_age,
text = paste0(Region, "<br>",
"Year: ", Year, "<br>",
"Life expectancy: ", round(LE_age, 1)),
group = 1)) +
geom_line(aes(color = Region)) +
labs(title = "Life expectancy",
caption = "Source: ourworldindata.org") +
scale_y_continuous(breaks = seq(from = 0, to = 90, by = 10),
labels = c('0 year',
'10 years',
'20 years',
'30 years',
'40 years',
'50 years',
'60 years',
'70 years',
'80 years',
'90 years')) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(face = "bold", size = 18),
plot.caption = element_text(size = 7),
legend.title = element_blank(),
legend.position = "top")
plotly1b <- ggplotly(p1b, tooltip = "text")
plotly1b
MenVSWomen <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-of-women-vs-life-expectancy-of-women.csv"))
MenVSWomen
MenVSWomen_countries <- MenVSWomen %>%
filter(!is.na(Code) & Entity != "World") %>%
rename(Country = Entity,
LE_men_age = `Life expectancy of men (years)`,
LE_women_age = `Life expectancy of women (years)`,
Total_pop = `Total population (Gapminder)`) %>%
mutate(Country = as.factor(Country),
Code = as.factor(Code))
MenVSWomen_regions <- MenVSWomen %>%
filter(is.na(Code) | Entity == "World") %>%
select(Entity,
Year,
`Life expectancy of men (years)`,
`Life expectancy of women (years)`,
`Total population (Gapminder)`) %>%
rename(Region = Entity,
LE_men_age = `Life expectancy of men (years)`,
LE_women_age = `Life expectancy of women (years)`,
Total_pop = `Total population (Gapminder)`) %>%
mutate(Region = as.factor(Region))
MenVSWomen_countries
MenVSWomen_regions
# Choose year to plot
sliceYear <- 2000
MenVSWomen_countries_yearChosen <- MenVSWomen_countries %>%
filter(Year == sliceYear)
p2a <- ggplot(MenVSWomen_countries_yearChosen, aes(x = LE_men_age,
y = LE_women_age,
size = Total_pop,
text = paste0(Country, "<br>",
"Men: ", round(LE_men_age,2), "<br>",
"Women: ", round(LE_women_age,2), "<br>",
"Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Men's vs women's life expectancy in ", sliceYear),
x = "Life expectancy of men",
y = "Life expectancy of women") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p2a, tooltip = "text")
MenVSWomen_regions_yearChosen <- MenVSWomen_regions %>%
filter(Year == sliceYear)
p2b <- ggplot(MenVSWomen_regions_yearChosen, aes(x = LE_men_age,
y = LE_women_age,
size = Total_pop,
text = paste0(Region, "<br>",
"Men: ", round(LE_men_age,2), "<br>",
"Women: ", round(LE_women_age,2), "<br>",
"Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Region), alpha = 0.8) +
scale_size_continuous(labels = comma) +
labs(title = paste0("Men's vs women's life expectancy in ", sliceYear),
x = "Life expectancy of men",
y = "Life expectancy of women") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p2b, tooltip = "text")
MenVSWomen_countries_long <- MenVSWomen_countries %>%
pivot_longer(cols = c("LE_men_age","LE_women_age"),
names_to = "Gender", values_to = "LE_age")
MenVSWomen_countries_long$Gender <- as.factor(sapply(as.character(MenVSWomen_countries_long$Gender), switch,
"LE_men_age" = "Men",
"LE_women_age" = "Women"))
# Choose a country
countryChosen <- "United Kingdom"
dfLong_counChosen <- MenVSWomen_countries_long %>%
filter(Country == countryChosen) %>%
drop_na() %>%
as.data.frame()
p3a <- ggplot(dfLong_counChosen, aes(x = Year,
y = ifelse(Gender == "Men",
LE_age,
-LE_age),
fill = Gender,
text = paste0(Year, "<br>",
"Life exp: ", round(LE_age,2),
" years"))) +
geom_col() +
coord_flip() +
# scale_fill_manual(labels = c("Men","Women"), values = c("blue","red")) +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = abs,
limits = max(dfLong_counChosen$LE_age)*c(-1,1)) +
labs(title = paste0("Life expectancy by gender in ", countryChosen),
y = "Life expectancy",
x = NULL) +
theme_calc() +
theme(plot.title = element_text(face = "bold", size = 12))
ggplotly(p3a, tooltip = "text")
MenVSWomen_regions_long <- MenVSWomen_regions %>%
pivot_longer(cols = c("LE_men_age","LE_women_age"),
names_to = "Gender", values_to = "LE_age")
MenVSWomen_regions_long$Gender <- as.factor(sapply(
as.character(MenVSWomen_regions_long$Gender), switch,
"LE_men_age" = "Men",
"LE_women_age" = "Women"))
# Choose a region
regionChosen <- "Africa"
dfLong_regChosen <- MenVSWomen_regions_long %>%
filter(Region == regionChosen) %>%
drop_na() %>%
as.data.frame()
p3b <- ggplot(dfLong_regChosen, aes(x = Year,
y = ifelse(Gender == "Men",
LE_age,
-LE_age),
fill = Gender,
text = paste0(Year, "<br>",
"Life exp: ", round(LE_age,2),
" years"))) +
geom_col() +
coord_flip() +
# scale_fill_manual(labels = c("Men","Women"), values = c("blue","red")) +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = abs,
limits = max(dfLong_regChosen$LE_age)*c(-1,1)) +
labs(title = paste0("Life expectancy by gender in ", regionChosen),
y = "Life expectancy",
x = NULL) +
theme_calc() +
theme(plot.title = element_text(face = "bold", size = 12))
ggplotly(p3b, tooltip = "text")
# define a function to convert factor to numeric
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
df_pop <- MenVSWomen_regions %>%
filter(Region != "World" & Region != "Saint Barthlemy") %>%
select(Region, Year, Total_pop) %>%
drop_na() %>%
mutate(Year = as.factor(Year))
Total <- df_pop %>%
group_by(Year) %>%
summarise(sum_Year = sum(Total_pop)) %>%
ungroup()
dfpopPercent <- left_join(df_pop, Total, by = c("Year" = "Year")) %>%
mutate(Ratio = Total_pop/sum_Year*100,
Year = as.numeric.factor(Year)) %>%
select(Region, Year, Total_pop, Ratio)
options(scipen = 999)
p4 <- ggplot(dfpopPercent, aes(x = Year,
y = Total_pop,
text = paste0(Region, "<br>",
"Year: ", Year, "<br>",
"Pops: ", format(Total_pop, big.mark = ",")),
group = Region)) +
geom_area(aes(fill = Region),
position = "fill",
color = "white",
size = 0.2) +
labs(title = "World Population - Normalized",
x = "Year",
y = NULL) +
scale_x_continuous(labels = comma) +
scale_fill_brewer(palette = "Dark2") +
scale_y_continuous(labels = percent) +
theme_calc() +
theme(plot.title = element_text(face = "bold", size = 15))
ggplotly(p4, tooltip = "text")
LEvsGDP[is.na(LEvsGDP$Code),]
unique(LEvsGDP[is.na(LEvsGDP$Code),])
unique(LEvsGDP[is.na(LEvsGDP$Code),Code])
unique(LEvsGDP[is.na(LEvsGDP$Code),"Code"])
LEvsGDP[is.na(LEvsGDP$Code),"Code"]
unique(LEvsGDP[is.na(LEvsGDP$Code),"Entity"])
LEvsGDP_countries <- LEvsGDP %>%
filter(!is.na(Code) & Entity != "World") %>%
rename(Country = Entity,
LE_age = `Life expectancy at birth (years)`,
Total_pop = `Population by country`) %>%
mutate(Country = as.factor(Country),
Code = as.factor(Code))
LEvsGDP_regions <- LEvsGDP %>%
filter(is.na(Code) | Entity == "World") %>%
select(Entity,
Year,
`Life expectancy at birth (years)`,
`Population by country`) %>%
rename(Region = Entity,
LE_men = `Life expectancy at birth (years)`,
Total_pop = `Total population (Gapminder)`) %>%
mutate(Region = as.factor(Region))
LEvsGDP_countries <- LEvsGDP %>%
filter(!is.na(Code) & Entity != "World") %>%
rename(Country = Entity,
LE_age = `Life expectancy at birth (years)`,
Total_pop = `Population by country`) %>%
mutate(Country = as.factor(Country),
Code = as.factor(Code))
LEvsGDP_regions <- LEvsGDP %>%
filter(is.na(Code) | Entity == "World") %>%
select(Entity,
Year,
`Life expectancy at birth (years)`,
`Population by country`) %>%
rename(Region = Entity,
LE_men = `Life expectancy at birth (years)`,
Total_pop = `Population by country`) %>%
mutate(Region = as.factor(Region))
LEvsGDP_countries
LEvsGDP_regions
LEvsGDP_countries <- LEvsGDP %>%
filter(!is.na(Code) & Entity != "World") %>%
rename(Country = Entity,
LE_age = `Life expectancy at birth (years)`,
GDP = `GDP per capita ($)`,
Total_pop = `Population by country`) %>%
mutate(Country = as.factor(Country),
Code = as.factor(Code))
LEvsGDP_regions <- LEvsGDP %>%
filter(is.na(Code) | Entity == "World") %>%
select(Entity,
Year,
`Life expectancy at birth (years)`,
`GDP per capita ($)`,
`Population by country`) %>%
rename(Region = Entity,
LE_men = `Life expectancy at birth (years)`,
GDP = `GDP per capita ($)`,
Total_pop = `Population by country`) %>%
mutate(Region = as.factor(Region))
LEvsGDP_countries
LEvsGDP_regions
p2a <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop)) +
# text = paste0(Country, "<br>",
#               "Men: ", round(LE_men_age,2), "<br>",
#               "Women: ", round(LE_women_age,2), "<br>",
#               "Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Life expectancy vs GDP in ", sliceYear),
x = "Life expectancy",
y = "GDP per capita") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
# Choose year to plot
sliceYear <- 2010
DF_LEvsGDPCountries <- LEvsGDP_countries %>%
filter(Year == sliceYear)
p2a <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop)) +
# text = paste0(Country, "<br>",
#               "Men: ", round(LE_men_age,2), "<br>",
#               "Women: ", round(LE_women_age,2), "<br>",
#               "Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Life expectancy vs GDP in ", sliceYear),
x = "Life expectancy",
y = "GDP per capita") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
p5 <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop)) +
# text = paste0(Country, "<br>",
#               "Men: ", round(LE_men_age,2), "<br>",
#               "Women: ", round(LE_women_age,2), "<br>",
#               "Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Life expectancy vs GDP in ", sliceYear),
x = "Life expectancy",
y = "GDP per capita") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p5, tooltip = "text")
ggplotly(p5)#, tooltip = "text")
p5 <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop)) +
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $ ", format(GDP, big.mark = ","), "<br>",
"Pop: ", format(Total_pop, big.mark = ",")))) +
p5 <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $ ", format(GDP, big.mark = ","), "<br>",
"Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Life expectancy vs GDP in ", sliceYear),
x = "Life expectancy",
y = "GDP per capita") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p5)#, tooltip = "text")
p5 <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $ ", format(GDP, big.mark = ","), "<br>",
"Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Life expectancy vs GDP in ", sliceYear),
x = "Life expectancy",
y = "GDP per capita") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p5)#, tooltip = "text")
ggplotly(p5, tooltip = "text")
p5 <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $", format(GDP, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Life expectancy vs GDP in ", sliceYear),
x = "Life expectancy",
y = "GDP per capita") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p5, tooltip = "text")
dollar(23)
add_year <- function(x) {return(paste(x, 'years'))}
p5 <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $", format(GDP, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.8) +
labs(title = paste0("Life expectancy vs GDP in ", sliceYear),
x = "Life expectancy",
y = "GDP per capita") +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p5, tooltip = "text")
p5 <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $", format(GDP, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Country), alpha = 0.6) +
labs(title = paste0("Life expectancy vs GDP per capita in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p5, tooltip = "text")
