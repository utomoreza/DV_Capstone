scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set2") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p5a, tooltip = "text")
p5a <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $", format(GDP, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs GDP per capita in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set3") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p5a, tooltip = "text")
p5a <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $", format(GDP, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs GDP per capita in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Paired") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p5a, tooltip = "text")
p5a <- ggplot(DF_LEvsGDPCountries, aes(x = LE_age,
y = GDP,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"GDP: $", format(GDP, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs GDP per capita in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p5a, tooltip = "text")
LEvsHealth <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-vs-healthcare-expenditure.csv", na = ""))
LEvsHealth
LEvsHealth <- LEvsHealth %>%
rename(LE_age = `Life expectancy at birth (years)`,
HealthExp = `Healthcare Expenditure per capita (int.-$) (constant 2011 international $)`) %>%
select(Entity, Code, Year, LE_age, HealthExp)
LEvsHealth
LEvsHealth <- LEvsHealth %>%
rename(LE_age = `Life expectancy at birth (years)`,
HealthExp = `Healthcare Expenditure per capita (int.-$) (constant 2011 international $)`) %>%
select(Entity, Code, Year, LE_age, HealthExp) %>%
filter(Year >= 1995)
LEvsHealth <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-vs-healthcare-expenditure.csv", na = ""))
LEvsHealth <- LEvsHealth %>%
rename(LE_age = `Life expectancy at birth (years)`,
HealthExp = `Healthcare Expenditure per capita (int.-$) (constant 2011 international $)`) %>%
select(Entity, Code, Year, LE_age, HealthExp) %>%
filter(Year >= 1995)
LEvsHealth
LEvsHealth <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-vs-healthcare-expenditure.csv", na = ""))
LEvsHealth <- LEvsHealth %>%
rename(LE_age = `Life expectancy at birth (years)`,
HealthExp = `Healthcare Expenditure per capita (int.-$) (constant 2011 international $)`) %>%
select(Entity, Code, Year, LE_age, HealthExp) %>%
filter(Year >= 1995 & !is.na(Code))
LEvsHealth
LEvsHealth[LEvsHealth$Entity == "Brunei",]
LEvsHealth <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-vs-healthcare-expenditure.csv", na = ""))
LEvsHealth <- LEvsHealth %>%
rename(Country = Entity,
LE_age = `Life expectancy at birth (years)`,
HealthExp = `Healthcare Expenditure per capita (int.-$) (constant 2011 international $)`) %>%
select(Entity, Code, Year, LE_age, HealthExp) %>%
filter(Year >= 1995 & !is.na(Code)) %>%
filter(Country != "Channel Islands" &
Country != "French Guiana" &
Country != "Macacu" &
Country != "Melanesia" &
Country != "Reunion" &
Country != "Curacao" &
Country != "Martinique" &
Country != "Guadeloupe" &
Country != "Mayotte" &
Country != "United States Virgin Islands")
LEvsHealth <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-vs-healthcare-expenditure.csv", na = ""))
LEvsHealth <- LEvsHealth %>%
rename(Country = Entity,
LE_age = `Life expectancy at birth (years)`,
HealthExp = `Healthcare Expenditure per capita (int.-$) (constant 2011 international $)`) %>%
select(Country, Code, Year, LE_age, HealthExp) %>%
filter(Year >= 1995 & !is.na(Code)) %>%
filter(Country != "Channel Islands" &
Country != "French Guiana" &
Country != "Macacu" &
Country != "Melanesia" &
Country != "Reunion" &
Country != "Curacao" &
Country != "Martinique" &
Country != "Guadeloupe" &
Country != "Mayotte" &
Country != "United States Virgin Islands")
LEvsHealth
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"Brunei",
"Brunei Darussalam")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"Macao",
"Macau")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"^Congo$",
"Democratic Republic of Congo")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"^Micronesia \\(country\\)$",
"Federated States of Micronesia")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"Timor",
"Timor-Leste")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"^Polynesia$",
"French Polynesia")
LEvsHealth_countrFull <- left_join(LEvsHealth,
countries_,
by = c("Country" = "Country"))
LEvsHealth_countrFull
# Choose year to plot
sliceYear <- 2013
DF_LEvsHealthCountries <- LEvsHealth_countrFull %>%
filter(Year == sliceYear)
p6 <- ggplot(DF_LEvsHealthCountries, aes(x = LE_age,
y = HealthExp,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"Healthcare Exp: $", format(HealthExp, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs healthcare expenditure in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p6, tooltip = "text")
LEvsHealth <- as.data.frame(read_csv("./LifeExpectancy/life-expectancy-vs-healthcare-expenditure.csv", na = ""))
LEvsHealth
LEvsHealth <- LEvsHealth %>%
rename(Country = Entity,
LE_age = `Life expectancy at birth (years)`,
HealthExp = `Healthcare Expenditure per capita (int.-$) (constant 2011 international $)`,
Total_pop = X6) %>%
filter(Year >= 1995 & !is.na(Code)) %>%
filter(Country != "Channel Islands" &
Country != "French Guiana" &
Country != "Macacu" &
Country != "Melanesia" &
Country != "Reunion" &
Country != "Curacao" &
Country != "Martinique" &
Country != "Guadeloupe" &
Country != "Mayotte" &
Country != "United States Virgin Islands")
LEvsHealth
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"Brunei",
"Brunei Darussalam")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"Macao",
"Macau")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"^Congo$",
"Democratic Republic of Congo")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"^Micronesia \\(country\\)$",
"Federated States of Micronesia")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"Timor",
"Timor-Leste")
LEvsHealth$Country <- str_replace_all(LEvsHealth$Country,
"^Polynesia$",
"French Polynesia")
LEvsHealth_countrFull <- left_join(LEvsHealth,
countries_,
by = c("Country" = "Country"))
LEvsHealth_countrFull
# Choose year to plot
sliceYear <- 2013
DF_LEvsHealthCountries <- LEvsHealth_countrFull %>%
filter(Year == sliceYear)
p6 <- ggplot(DF_LEvsHealthCountries, aes(x = LE_age,
y = HealthExp,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"Healthcare Exp: $", format(HealthExp, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs healthcare expenditure in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p6, tooltip = "text")
LEvsHealth_countrFull[is.na(LEvsHealth_countrFull$Continent),]
LEvsHealth_countrFull <- LEvsHealth_countrFull %>%
filter(!is.na(LEvsHealth_countrFull$Continent) |
LEvsHealth_countrFull == "World")
LEvsHealth_countrFull <- LEvsHealth_countrFull %>%
filter(!is.na(Continent) | Country == "World")
# Choose year to plot
sliceYear <- 2013
DF_LEvsHealthCountries <- LEvsHealth_countrFull %>%
filter(Year == sliceYear)
p6 <- ggplot(DF_LEvsHealthCountries, aes(x = LE_age,
y = HealthExp,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"Healthcare Exp: $", format(HealthExp, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs healthcare expenditure in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p6, tooltip = "text")
LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]
rownames(LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",])
idx <- as.numeric(rownames(LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]))
idx
LEvsHealth_countrFull[idx,"Continent"] <- "World"
LEvsHealth_countrFull <- left_join(LEvsHealth,
countries_,
by = c("Country" = "Country")) %>%
filter(!is.na(Continent) | Country == "World")
idx <- as.numeric(rownames(LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]))
LEvsHealth_countrFull[idx,"Continent"] <- "World"
LEvsHealth_countrFull <- left_join(LEvsHealth,
countries_,
by = c("Country" = "Country")) %>%
filter(!is.na(Continent) | Country == "World")
LEvsHealth_countrFull
idx <- as.numeric(rownames(LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]))
LEvsHealth_countrFull[idx,"Continent"] <- as.factor("World")
LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]
LEvsHealth_countrFull[5473,"Continent"] <- as.factor("World")
LEvsHealth_countrFull <- left_join(LEvsHealth,
countries_,
by = c("Country" = "Country")) %>%
filter(!is.na(Continent) | Country == "World") %>%
mutate(Continent = as.character.factor(Continent))
idx <- as.numeric(rownames(LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]))
LEvsHealth_countrFull[5473,"Continent"] <- as.factor("World")
LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]
LEvsHealth_countrFull[5473,"Continent"] <- "World"
LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]
LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]
LEvsHealth_countrFull[idx,"Continent"] <- "World"
LEvsHealth_countrFull[LEvsHealth_countrFull$Country == "World",]
LEvsHealth_countrFull$Continent <- as.factor(LEvsHealth_countrFull$Continent)
LEvsHealth_countrFull
# Choose year to plot
sliceYear <- 2013
DF_LEvsHealthCountries <- LEvsHealth_countrFull %>%
filter(Year == sliceYear)
p6 <- ggplot(DF_LEvsHealthCountries, aes(x = LE_age,
y = HealthExp,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2), "<br>",
"Healthcare Exp: $", format(HealthExp, big.mark = ","), "<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs healthcare expenditure in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p6, tooltip = "text")
# Choose year to plot
sliceYear <- 2013
DF_LEvsHealthCountries <- LEvsHealth_countrFull %>%
filter(Year == sliceYear)
p6 <- ggplot(DF_LEvsHealthCountries, aes(x = LE_age,
y = HealthExp,
size = Total_pop,
text = paste0(Country, "<br>",
"Life exp: ", round(LE_age,2),
"<br>",
"Healthcare Exp: $",
format(
round(
HealthExp,2),
big.mark = ","),
"<br>",
"Pops: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Continent), alpha = 0.6) +
labs(title = paste0("Life expectancy vs healthcare expenditure in ", sliceYear),
x = NULL,
y = NULL) +
scale_y_continuous(labels = dollar) +
scale_x_continuous(labels = add_year) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 13))
ggplotly(p6, tooltip = "text")
shiny::runApp('LifeExpectancy')
runApp('LifeExpectancy')
unique(lifeExp_regions$Region)
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
install.packages("wordcloud")
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
install.packages(c("ggthemes", "knitr", "plotly", "scales", "tidyverse"))
lifeExp_regions
lifeExp_regions_wide <- lifeExp_regions %>%
pivot_wider(names_from = "Region", values_from = "LE_age")
lifeExp_regions_wide
lifeExp_regions_wide[,2:9]
colnames(lifeExp_regions_wide[,2:9])
y <- colnames(lifeExp_regions_wide[,2:9])
p1b <- ggplot(lifeExp_regions_wide, aes(x = Year,
y = y,
text = paste0(Region, "<br>",
"Year: ", Year, "<br>",
"Life expectancy: ", round(LE_age, 1)),
group = 1)) +
geom_line() +
labs(title = "Life expectancy",
caption = "Source: ourworldindata.org") +
scale_y_continuous(breaks = seq(from = 0, to = 90, by = 10),
labels = add_year) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(face = "bold", size = 18),
plot.caption = element_text(size = 7),
legend.title = element_blank(),
legend.position = "top")
ggplotly(p1b, tooltip = "text")
p1b <- ggplot(lifeExp_regions_wide, aes(x = Year,
y = y)) +
# text = paste0(Region, "<br>",
#               "Year: ", Year, "<br>",
#               "Life expectancy: ", round(LE_age, 1)),
# group = 1)) +
geom_line() +
labs(title = "Life expectancy",
caption = "Source: ourworldindata.org") +
scale_y_continuous(breaks = seq(from = 0, to = 90, by = 10),
labels = add_year) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(face = "bold", size = 18),
plot.caption = element_text(size = 7),
legend.title = element_blank(),
legend.position = "top")
plotly1b <- ggplotly(p1b, tooltip = "text")
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp()
runApp('LifeExpectancy')
runApp()
runApp('LifeExpectancy')
runApp('LifeExpectancy')
lifeExp_countries[lifeExp_countries$Country == "World",]
runApp('LifeExpectancy')
lifeExp_countries_chosen <- lifeExp %>%
filter(Entity == "World") %>%
rename(Country = Entity, LE_age = `Life expectancy (years)`) %>%
mutate(Country = as.factor(Country), Code = as.factor(Code))
lifeExp_countries_chosen
p1a <- ggplot(lifeExp_countries_chosen, aes(x = Year,
y = LE_age,
text = paste0(Country, "<br>",
"Year: ", Year, "<br>",
"Life expectancy: ", round(LE_age, 1)),
group = 1)) +
geom_line(aes(color = Country)) +
labs(title = "Life expectancy",
caption = "Source: ourworldindata.org") +
scale_y_continuous(breaks = seq(from = 0, to = 90, by = 10),
labels = add_year) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(face = "bold", size = 18),
plot.caption = element_text(size = 7),
legend.title = element_blank())
ggplotly(p1a, tooltip = "text")
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
MenVSWomen_regions_yearChosen <- MenVSWomen_regions %>%
filter(Year == sliceYear)
p2b <- ggplot(MenVSWomen_regions_yearChosen, aes(x = LE_men_age,
y = LE_women_age,
size = Total_pop,
text = paste0(Region, "<br>",
"Men: ", round(LE_men_age,2), "<br>",
"Women: ", round(LE_women_age,2), "<br>",
"Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Region), alpha = 0.8) +
scale_size_continuous(labels = comma) +
labs(title = paste0("Men's vs women's life expectancy in ", sliceYear),
x = "Life expectancy of men",
y = "Life expectancy of women") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p2b, tooltip = "text")
MenVSWomen_regions_yearChosen <- MenVSWomen_regions %>%
filter(Year == sliceYear)
p2b <- ggplot(MenVSWomen_regions_yearChosen, aes(x = LE_men_age,
y = LE_women_age,
size = Total_pop,
text = paste0(Region, "<br>",
"Men: ", round(LE_men_age,2), "<br>",
"Women: ", round(LE_women_age,2), "<br>",
"Pop: ", format(Total_pop, big.mark = ",")))) +
geom_jitter(aes(color = Region), alpha = 0.8) +
scale_size_continuous(labels = comma) +
labs(title = paste0("Men's vs women's life expectancy in ", sliceYear),
x = "Life expectancy of men",
y = "Life expectancy of women") +
theme_bw() +
theme(legend.position = "none",
plot.title = element_text(face = "bold", size = 13))
ggplotly(p2b, tooltip = "text")
runApp('LifeExpectancy')
runApp('LifeExpectancy')
install.packages('shinywidgets')
install.packages('shinyWidgets')
runApp('LifeExpectancy')
unique(MenVSWomen$Year)
sort(unique(MenVSWomen$Year))
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
sort(unique(MenVSWomen$Year))[2]
sort(unique(MenVSWomen$Year))
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
runApp('LifeExpectancy')
MenVSWomen_regions[MenVSWomen_regions$Year == 1780,]
View(MenVSWomen_regions)
sort(unique(MenVSWomen$Year))
runApp('LifeExpectancy')
runApp('LifeExpectancy')
