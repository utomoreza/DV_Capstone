year[i], "-",
month[i], "-",
day[i], " ",
sched_arr_time[i]),
tz = tzone[i])
two <- (as.numeric(one - dep_time[i]))*60 - air_time[i]
# browser()
if (two < 0) {
output <- as.POSIXct(
paste0(
year[i], "-",
month[i], "-",
day[i]+1, " ",
sched_arr_time[i]),
tz = tzone[i])
} else {
output <- one
}
# browser()
outputs <- c(outputs, output)
}
browser()
return(outputs)
}
convertToPOSIXct(normal_arrTime$year[1:2],
normal_arrTime$month[1:2],
normal_arrTime$day[1:2],
normal_arrTime$tzone[1:2],
normal_arrTime$sched_arr_time[1:2],
normal_arrTime$dep_time[1:2],
normal_arrTime$air_time[1:2])
outputs
library(tibble)
library(tibble)
sched_arr_time_POSIXct <- convertToPOSIXct(normal_arrTime$year,
normal_arrTime$month,
normal_arrTime$day,
normal_arrTime$tzone,
normal_arrTime$sched_arr_time,
normal_arrTime$dep_time,
normal_arrTime$air_time)
normal_arrTime %>% is.na() %>% colSums()
# collect all data without abnormal formats in sched_arr_time or arr_time and without NAs in air_time
normal_arrTime <- flight_airports[
!(
(grepl(
pattern = "^.$",
x = flight_airports$arr_time) |
grepl(pattern = "^..$",
x = flight_airports$arr_time)) |
(grepl(pattern = "^.$",
x = flight_airports$sched_arr_time) |
grepl(pattern = "^..$",
x = flight_airports$sched_arr_time)) |
is.na(flight_airports$air_time)),]
normal_arrTime
# change format of sched_arr_time to appropriate format
normal_arrTime$sched_arr_time <- as.character(sapply(normal_arrTime$sched_arr_time, convertToHMchar))
normal_arrTime %>% is.na() %>% colSums()
# change format sched_arr_time to POSIXct
convertToPOSIXct <- function(year, month, day, tzone, sched_arr_time, dep_time, air_time) {
iter <- length(year)
outputs <- vector()
outputs <- as.POSIXct(outputs)
outputs <- force_tz(outputs, tzone = "America/New_York")
# browser()
for (i in 1:iter) {
one <- as.POSIXct(
paste0(
year[i], "-",
month[i], "-",
day[i], " ",
sched_arr_time[i]),
tz = tzone[i])
two <- (as.numeric(one - dep_time[i]))*60 - air_time[i]
# browser()
if (two < 0) {
output <- as.POSIXct(
paste0(
year[i], "-",
month[i], "-",
day[i]+1, " ",
sched_arr_time[i]),
tz = tzone[i])
} else {
output <- one
}
# browser()
outputs <- c(outputs, output)
}
# browser()
return(outputs)
}
sched_arr_time_POSIXct <- convertToPOSIXct(normal_arrTime$year,
normal_arrTime$month,
normal_arrTime$day,
normal_arrTime$tzone,
normal_arrTime$sched_arr_time,
normal_arrTime$dep_time,
normal_arrTime$air_time)
unique(normal_arrTime$tzone)
unique(normal_arrTime$year)
unique(normal_arrTime$month)
unique(normal_arrTime$day)
unique(normal_arrTime$sched_arr_time)
unique(normal_arrTime$dep_time)
unique(normal_arrTime$sched_arr_time)
normal_arrTime$sched_arr_time
# change format sched_arr_time to POSIXct
convertToPOSIXct <- function(year, month, day, tzone, sched_arr_time, dep_time, air_time) {
iter <- length(year)
outputs <- vector()
outputs <- as.POSIXct(outputs)
outputs <- force_tz(outputs, tzone = "America/New_York")
# browser()
for (i in 1:iter) {
one <- as.POSIXct(
paste0(
year[i], "-",
month[i], "-",
day[i], " ",
sched_arr_time[i]),
tz = tzone[i])
two <- (as.numeric(one - dep_time[i]))*60 - air_time[i]
# browser()
if (two < 0) {
output <- as.POSIXct(
paste0(
year[i], "-",
month[i], "-",
day[i]+1, " ",
sched_arr_time[i]),
tz = tzone[i])
} else {
output <- one
}
browser()
outputs <- c(outputs, output)
}
# browser()
return(outputs)
}
sched_arr_time_POSIXct <- convertToPOSIXct(normal_arrTime$year,
normal_arrTime$month,
normal_arrTime$day,
normal_arrTime$tzone,
normal_arrTime$sched_arr_time,
normal_arrTime$dep_time,
normal_arrTime$air_time)
outputs
# change format sched_arr_time to POSIXct
convertToPOSIXct <- function(year, month, day, tzone, sched_arr_time, dep_time, air_time) {
iter <- length(year)
outputs <- vector()
outputs <- as.POSIXct(outputs)
outputs <- force_tz(outputs, tzone = "America/New_York")
# browser()
for (i in 1:iter) {
one <- as.POSIXct(
paste0(
year[i], "-",
month[i], "-",
day[i], " ",
sched_arr_time[i]),
tz = tzone[i])
two <- (as.numeric(one - dep_time[i]))*60 - air_time[i]
# browser()
if (two < 0) {
output <- as.POSIXct(
paste0(
year[i], "-",
month[i], "-",
day[i]+1, " ",
sched_arr_time[i]),
tz = tzone[i])
} else {
output <- one
}
# browser()
outputs <- c(outputs, output)
}
browser()
return(outputs)
}
sched_arr_time_POSIXct <- convertToPOSIXct(normal_arrTime$year,
normal_arrTime$month,
normal_arrTime$day,
normal_arrTime$tzone,
normal_arrTime$sched_arr_time,
normal_arrTime$dep_time,
normal_arrTime$air_time)
# change format sched_arr_time to POSIXct
# convertToPOSIXct <- function(year, month, day, tzone, sched_arr_time, dep_time, air_time) {
iter <- length(normal_arrTime$year)
outputs <- vector()
outputs <- as.POSIXct(outputs)
outputs <- force_tz(outputs, tzone = "America/New_York")
# browser()
for (i in 1:iter) {
one <- as.POSIXct(
paste0(
normal_arrTime$year[i], "-",
normal_arrTime$month[i], "-",
normal_arrTime$day[i], " ",
normal_arrTime$sched_arr_time[i]),
tz = normal_arrTime$tzone[i])
two <- (as.numeric(one - normal_arrTime$dep_time[i]))*60 - normal_arrTime$air_time[i]
# browser()
if (two < 0) {
output <- as.POSIXct(
paste0(
normal_arrTime$year[i], "-",
normal_arrTime$month[i], "-",
normal_arrTime$day[i]+1, " ",
normal_arrTime$sched_arr_time[i]),
tz = normal_arrTime$tzone[i])
} else {
output <- one
}
# browser()
outputs <- c(outputs, output)
}
normal_arrTime
normal_arrTime[i,]
normal_arrTime[i,]
normal_arrTime[i-1:i,]
normal_arrTime[i,]
normal_arrTime[25031,]
127/60
181/60
179/60
143-127
outputs[25030]
normal_arrTime[25030:25031,]
output
one
one - normal_arrTime$dep_time[25031]
day(normal_arrTime$dep_time[25031])
class(day(normal_arrTime$dep_time[25031]))
# browser()
for (i in 1:iter) {
Year <- year(normal_arrTime$dep_time[i])
Month <- month(normal_arrTime$dep_time[i])
Day <- day(normal_arrTime$dep_time[i])
one <- as.POSIXct(
paste0(
Year, "-",
Month, "-",
Day, " ",
normal_arrTime$sched_arr_time[i]),
tz = normal_arrTime$tzone[i])
two <- (as.numeric(one - normal_arrTime$dep_time[i]))*60 - normal_arrTime$air_time[i]
# browser()
if (two < 0) {
output <- as.POSIXct(
paste0(
Year, "-",
Month, "-",
Day+1, " ",
normal_arrTime$sched_arr_time[i]),
tz = normal_arrTime$tzone[i])
} else {
output <- one
}
# browser()
outputs <- c(outputs, output)
}
normal_arrTime[25100:25101,]
normal_arrTime[25099:25100,]
as.POSIXct(
paste0(
Year, "-",
Month, "-",
Day+1, " ",
normal_arrTime$sched_arr_time[25100]),
tz = normal_arrTime$tzone[25100])
inputs <- as.Date(c("2007-01-01",
"2007-01-31",
"2008-02-01",
"2008-02-29",
"2008-03-14",
"2008-12-01",
"2008-12-31"))
LastDayInMonth <- function(dt)
{
dt <- (as.character(dt))
dt <- as.character(as.Date(dt) %m+% months(1))
dt <- as.Date(ISOdate(as.numeric(substr(dt, 1, 4)),
as.numeric(substr(dt, 6, 7)),
1) - days(1))
return(dt)
}
LastDayInMonth(inputs)
as.Date("2013-1-31", format = "%Y-%m-%d")
as.Date("2013-1-31", format = "%Y-%m-%d") + day(1)
as.Date("2013-1-31", format = "%Y-%m-%d") + days(1)
one
217-183
one - normal_arrTime$dep_time[25100]
as,numeric(one - normal_arrTime$dep_time[25100])
as,numeric(one - normal_arrTime$dep_time[25100])
as.numeric(one - normal_arrTime$dep_time[25100])
as.numeric(one - normal_arrTime$dep_time[25100])*60
normal_arrTime$dep_time[25100]
normal_arrTime$dep_time[25100] + days(1)
month(normal_arrTime$dep_time[25100] + days(1))
LastDayInMonth <- function(Day)
{
DayPlus <- Day + days(1)
if (month(DayPlus) > month(Day)) {
output <- DayPlus
} else {
output <- Day
}
return(output)
}
LastDayInMonth(normal_arrTime$dep_time[25100])
normal_arrTime$dep_time[25100]
LastDayInMonth(normal_arrTime$dep_time[25100])
chron::chron(times. = "05:12")
chron::chron(times. = "05:12:00")
library(chron)
chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00"))
class(chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00")))
chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00")) + normal_arrTime$arr_delay[25100]
minute(normal_arrTime$arr_delay[25100])
lubridate::minutes(normal_arrTime$arr_delay[25100])
minutes(normal_arrTime$arr_delay[25100])
lubminutes <- lubridate::minutes()
lubminutes(normal_arrTime$arr_delay[25100])
chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00")) + lubridate::minutes(normal_arrTime$arr_delay[25100])
chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00")) + 53
chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00")) + 53/24/60
chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00")) + normal_arrTime$arr_delay[25100]/24/60
as.chron(normal_arrTime$sched_arr_time[25100])
as.chron(paste0(normal_arrTime$sched_arr_time[25100],":00"))
paste0(normal_arrTime$sched_arr_time[25100],":00")
chron(times. = paste0(normal_arrTime$sched_arr_time[25100],":00"))
normal_arrTime$sched_arr_time <- chron(times. = paste0(normal_arrTime$sched_arr_time,":00"))
normal_arrTime
normal_arrTime$sched_arr_time + normal_arrTime$arr_delay/24/60
normal_arrTime$sched_arr_time[1]
normal_arrTime$sched_arr_time[1] + normal_arrTime$arr_delay[1/24/60
normal_arrTime$sched_arr_time[1] + normal_arrTime$arr_delay[1]/24/60
normal_arrTime$sched_arr_time + (normal_arrTime$arr_delay/24/60)
normal_arrTime$sched_arr_time[1:5] + (normal_arrTime$arr_delay[1:5]/24/60)
long <- length(normal_arrTime$arr_time)
normal_arrTime$sched_arr_time[1:long] + (normal_arrTime$arr_delay[1:long]/24/60)
a <- normal_arrTime$arr_time
normal_arrTime$arr_time <- normal_arrTime$sched_arr_time[1:long] + (normal_arrTime$arr_delay[1:long]/24/60)
normal_arrTime
class(normal_arrTime$arr_time)
normal_arrTime$arr_time <- a
normal_arrTime
normal_arrTime$sched_arr_time[1:long] + (normal_arrTime$arr_delay[1:long]/24/60)
normal_arrTime$sched_arr_time[1:long]
normal_arrTime$sched_arr_time + (normal_arrTime$arr_delay)
normal_arrTime$sched_arr_time[1] + normal_arrTime$arr_delay[1]
normal_arrTime$sched_arr_time[1] + normal_arrTime$arr_delay[1]/24
normal_arrTime$sched_arr_time[1] + normal_arrTime$arr_delay[1]/24/60
a <- normal_arrTime$arr_time
normal_arrTime$arr_time <- normal_arrTime$sched_arr_time + (normal_arrTime$arr_delay)
normal_arrTime$arr_time <- normal_arrTime$sched_arr_time + (normal_arrTime$arr_delay)/24/60
normal_arrTime
chron(times. = normal_arrTime$arr_time)
chron(times. = normal_arrTime$arr_time[1])
normal_arrTime$arr_time <- a
normal_arrTime
normal_arrTime$arr_time <- chron(times. = (normal_arrTime$sched_arr_time + (normal_arrTime$arr_delay)/24/60))
normal_arrTime
class(normal_arrTime$arr_time)
hms(normal_arrTime$arr_time)
hms(normal_arrTime$arr_time[1])
normal_arrTime %>% is.na() %>% colSums()
chron(times. = normal_arrTime$arr_time[1])
normal_arrTime$arr_time <- chron(times. = normal_arrTime$arr_time)
normal_arrTime
hm("08:19")
chron(times. = hm("08:19"))
chron(times. = "08:19")
chron(times. = "08:19:00")
normal_arrTime$arr_time <- a
normal_arrTime
hm("08:19") + lubridate::minutes(11)
times(hm("08:19") + lubridate::minutes(11))
x <- times(hm("08:19") + lubridate::minutes(11))
LastDayInMonth(normal_arrTime$dep_time[1])
normal_arrTime$dep_time[1] + days()
normal_arrTime$dep_time[1] + days(1)
detach("package:chron", unload = TRUE)
normal_arrTime$dep_time[1] + days(1)
LastDayInMonth(normal_arrTime$dep_time[1])
LastDayInMonth("2013-02-29 05:55 EST")
LastDayInMonth("2013-02-28 05:55 EST")
LastDayInMonth("2013-02-28 05:55:00 EST")
q
CheckLastDayInMonth <- function(Day)
{
Day <- as.POSIXct(Day)
DayPlus <- Day + days(1)
if (month(DayPlus) > month(Day)) {
output <- DayPlus
} else {
output <- Day
}
return(output)
}
LastDayInMonth("2013-02-28 05:55:00 EST")
LastDayInMonth("2013-02-28 05:55:00")
rm(LastDayInMonth())
rm(LastDayInMonth)
CheckLastDayInMonth("2013-02-28 05:55:00")
CheckLastDayInMonth("2013-02-29 05:55:00")
CheckLastDayInMonth <- function(Day)
{
Day <- as.POSIXct(Day)
DayPlus <- Day + days(1)
if (month(DayPlus) > month(Day)) {
output <- DayPlus
} else {
output <- Day
}
return(output)
}
# collect all data without abnormal formats in sched_arr_time or arr_time and without NAs in air_time
normal_arrTime <- flight_airports[
!(
(grepl(
pattern = "^.$",
x = flight_airports$arr_time) |
grepl(pattern = "^..$",
x = flight_airports$arr_time)) |
(grepl(pattern = "^.$",
x = flight_airports$sched_arr_time) |
grepl(pattern = "^..$",
x = flight_airports$sched_arr_time)) |
is.na(flight_airports$air_time)),]
# change format of sched_arr_time to appropriate format
normal_arrTime$sched_arr_time <- as.character(sapply(normal_arrTime$sched_arr_time, convertToHMchar))
# change format sched_arr_time to POSIXct
# convertToPOSIXct <- function(year, month, day, tzone, sched_arr_time, dep_time, air_time) {
iter <- length(normal_arrTime$year)
outputs <- vector()
outputs <- as.POSIXct(outputs)
outputs <- force_tz(outputs, tzone = "America/New_York")
# browser()
for (i in 1:iter) {
Year <- year(normal_arrTime$sched_dep_time[i])
Month <- month(normal_arrTime$sched_dep_time[i])
Day <- day(normal_arrTime$sched_dep_time[i])
one <- as.POSIXct(
paste0(
Year, "-",
Month, "-",
Day, " ",
normal_arrTime$sched_arr_time[i]),
tz = normal_arrTime$tzone[i])
two <- (as.numeric(one - normal_arrTime$sched_dep_time[i]))*60 - normal_arrTime$air_time[i]
# browser()
if (two < 0) {
output <- CheckLastDayInMonth(one)
} else {
output <- one
}
# browser()
outputs <- c(outputs, output)
}
rm(list = ls())
library(tidyverse)
library(lubridate)
library(tibble)
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
is.na(airports) %>% colSums()
airports %>% filter(is.na(tzone))
airports[is.na(airports$tzone), "tzone"] <- c("America/New_York","America/New_York","America/Anchorage")
is.na(airports) %>% colSums()
is.na(flights) %>% colSums()
mdn_dep_delay <- median(flights$dep_delay, na.rm = T)
mdn_arr_delay <- median(flights$arr_delay, na.rm = T)
flights$dep_delay <- replace_na(data = flights$dep_delay, replace = mdn_dep_delay)
flights$arr_delay <- replace_na(data = flights$arr_delay, replace = mdn_arr_delay)
is.na(flights) %>% colSums()
convertToHMchar <- function(input) {
input <- as.character(input)
# browser()
if (nchar(input) == 4) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^..", replacement = "", x = input))
} else if (nchar(input) == 3) {
output <- paste0(gsub("..$", replacement = "", x = input),
":",
gsub("^.", replacement = "", x = input))
}
# browser()
return(output)
}
flights$sched_dep_time <- as.character(sapply(flights$sched_dep_time, convertToHMchar))
# change format sched_dep_time to POSIXct
flights$sched_dep_time <- as.POSIXct(paste0(flights$year, "-",
flights$month,"-",
flights$day, " ",
flights$sched_dep_time),
tz = "America/New_York")
# Calculate actual dep_time by adding dep_delay to sched_dep_time
flights$dep_time <- flights$sched_dep_time + flights$dep_delay*60
flights
is.na(flights) %>% colSums()
